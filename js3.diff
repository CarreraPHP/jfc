diff --git a/ngapp/app/controller/UIChartItemController.js b/ngapp/app/controller/UIChartItemController.js
index 43a9170..57f2d73 100644
--- a/ngapp/app/controller/UIChartItemController.js
+++ b/ngapp/app/controller/UIChartItemController.js
@@ -2,7 +2,7 @@
     var self = this;
     $scope.mode = 'edit'; // possible modes -> edit, display
     $scope.typeList = ['Begin', 'Activity', 'Actor', 'End'];
-    $scope.chartValueField = "id";
+//    $scope.chartValueField = "id";
     
     $scope.$watch($scope.item.internal.mode, function(){
         $scope.mode = $scope.item.internal.mode;
@@ -18,10 +18,9 @@
 ////        $scope.handleChange();
 //    });
 
-    $scope.chartChange = function(sItem){
-        console.log("%c arguments", "color:green;font-size:40px", sItem, arguments);
-        
-    }
+//    $scope.chartChange = function(sItem, oItem){
+//        console.log("%c arguments", "color:green;font-size:40px", $scope.editor, arguments);
+//    };
     
     $scope.doEdit = function(){        
         $scope.mode = $scope.item.internal.mode = 'edit';
@@ -30,6 +29,35 @@
     $scope.doSubmit = function(){
         $scope.mode = $scope.item.internal.mode = 'display';
     };
+    
+    $scope.doDelete = function(scope){
+        var item = $scope.item,
+            index = $scope.editor.chartList.indexOf(item),
+            excludeList = $scope.editor.chartList.splice(index, 1),
+            excludeItem = excludeList[0];
+        
+        angular.forEach($scope.editor.chartList, function(yList, yKey){
+            angular.forEach(yList.options, function(option, key){
+                if(option.charts == excludeItem.id){
+                    $scope.editor.chartList[yKey].options.splice(key, 1);
+                }
+                if(option.charts.indexOf(excludeItem.id) !== -1){
+                    var idArr = excludeItem.id.split('-');
+                    idArr.splice(idArr.length-1, 1);
+                    var newId = idArr.join('-');
+                    option.charts = option.charts.replace(new RegExp(excludeItem.id + '-', "gi"), newId);
+                }
+            });
+            if(yList.id.indexOf(excludeItem.id) !== -1){
+                var idArr = excludeItem.id.split('-');
+                idArr.splice(idArr.length-1, 1);
+                var newId = idArr.join('-');
+                yList.id = yList.id.replace(new RegExp(excludeItem.id, "gi"), newId);                
+            }
+        });        
+        $scope.editor.editList = [];        
+//        console.log("%c $scope", "color:red;font-size:22px;", item, index, excludeList);
+    }
     
     $scope.handleChange = function(){
         var levelList = $scope.item.id.split('-');
@@ -44,4 +72,11 @@
 //            console.log("Element ", $scope.item.id, document.getElementById($scope.item.id), height, angular.element(document.getElementById($scope.item.id)));
         }, 500);        
     };
+    
+//    $scope.$watch('subitem.charts', function(){
+//        if(angular.isDefined($scope.chartChange)){
+//            console.log($scope.subitem, $scope.subitem);
+//            $scope.chartChange($scope.subitem, $scope.subitem);
+//        }  
+//    });
 }
diff --git a/ngapp/app/controller/UIChartOptionController.js b/ngapp/app/controller/UIChartOptionController.js
index 894b96c..78a6957 100644
--- a/ngapp/app/controller/UIChartOptionController.js
+++ b/ngapp/app/controller/UIChartOptionController.js
@@ -1,47 +1,19 @@
 function UIChartOptionController($scope, $attrs, progressConfig, $timeout) {
-    var self = this;
-    $scope.mode = 'edit'; // possible modes -> edit, display
-    $scope.typeList = ['Begin', 'Activity', 'Actor', 'End'];
+    var self = this;    
     $scope.chartValueField = "id";
     
-    $scope.$watch($scope.item.internal.mode, function(){
-        $scope.mode = $scope.item.internal.mode;
-    });
     
-    $scope.$watch('item.name', function(){
-//        console.log("arguments", arguments);
-        $scope.handleChange();
-    });
-    
-//    $scope.$watch('subitem.name', function(){
-//        console.log("%c arguments", "color:green;font-size:40px", arguments);
-////        $scope.handleChange();
-//    });
-
-    $scope.chartChange = function(sItem){
-        console.log("%c arguments", "color:green;font-size:40px", sItem, arguments);
-        
-    }
-    
-    $scope.doEdit = function(){        
-        $scope.mode = $scope.item.internal.mode = 'edit';
-    };
-    
-    $scope.doSubmit = function(){
-        $scope.mode = $scope.item.internal.mode = 'display';
-    };
-    
-    $scope.handleChange = function(){
-        var levelList = $scope.item.id.split('-');
-//        $scope.item.internal.style.left = 300 * (levelList.length-1) + "px";
-//        $scope.item.internal.style.top = 0 + "px";
-        
+    $scope.chartChange = function(sItem, oItem){
         $timeout(function(){
-            var el = document.getElementById($scope.item.id),
-                height = el.getBoundingClientRect().height;
-                
-//            $scope.item.internal.style.top = (parseInt($scope.item.internal.style.top) - (height/2)) + "px";
-//            console.log("Element ", $scope.item.id, document.getElementById($scope.item.id), height, angular.element(document.getElementById($scope.item.id)));
-        }, 500);        
+            var a = angular.element(document.querySelector('#' + $scope.subitem.id + '-arrow-' + sItem)),
+                b = a.scope();
+//                ,
+//                c = angular.element(document.querySelector('#' + sItem)),
+//                d = c.scope();
+//            console.log("%c arguments", "color:green;font-size:40px", a, b, c, d, $scope, arguments);
+        
+            $scope.rearrangeOption(b.subitem, b.item, b.xIndex, b.yIndex, b.$index, b.yInit, b.editor.parsedList); //, d.xIndex);
+        }, 500); 
+        
     };
-}
+}
\ No newline at end of file
diff --git a/ngapp/app/controller/UISelectController.js b/ngapp/app/controller/UISelectController.js
index 4a94a10..bfca46c 100644
--- a/ngapp/app/controller/UISelectController.js
+++ b/ngapp/app/controller/UISelectController.js
@@ -25,6 +25,7 @@
     }
     $scope.itemSelect = function(item){
 //        console.log("arguments", item, arguments);
+        $scope._value = $scope.value;
         $scope.value = item;
         $scope.expand = false;
     }
@@ -33,8 +34,8 @@
 
     $scope.$watch('value', function(){
         if(angular.isDefined($scope.change)){
-            console.log($scope.change, $scope.value);
-            $scope.change($scope.value);
+            console.log($scope.value, $scope._value);
+            $scope.change($scope.value, $scope._value);
         }  
     });
 }
diff --git a/ngapp/app/controller/UITextController.js b/ngapp/app/controller/UITextController.js
index 7438c5b..e230142 100644
--- a/ngapp/app/controller/UITextController.js
+++ b/ngapp/app/controller/UITextController.js
@@ -1,10 +1,16 @@
 function UITextController($scope, $attrs, progressConfig) {
-    var self = this;    
+    var self = this; 
+    
+    $scope.readonly = false;
 
     $scope.$watch($attrs.placeHolder, function(){
         $scope.placeholder = $attrs.placeholder;    
     });
     
+    $scope.$watch($attrs.readonly, function(){
+        $scope.readonly = $attrs.readonly;    
+    });
+    
     $scope.getPlaceHolder = function(){
         return $attrs.placeHolder;
     }
diff --git a/ngapp/app/directives/uitext.js b/ngapp/app/directives/uitext.js
index 4c3b54b..e8bce1a 100644
--- a/ngapp/app/directives/uitext.js
+++ b/ngapp/app/directives/uitext.js
@@ -5,7 +5,7 @@
     transclude: true,
     controller: 'UITextController',
     scope: {
-      value: '=ngModel',
+      value: '=ngModel'
     },
     templateUrl: 'app/view/directives/uitext.html',
     link: function(scope, element, attrs, UISelectCtrl) {}
