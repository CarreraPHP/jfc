diff --git a/ngapp/app/controller/AdminController.js b/ngapp/app/controller/AdminController.js
index 293321f..ff58a69 100644
--- a/ngapp/app/controller/AdminController.js
+++ b/ngapp/app/controller/AdminController.js
@@ -18,9 +18,64 @@
             portal: "",
             name: "Chart Title",
             owner: "Build Team",
+            config:{
+                edit: false,
+                title: "Chart Configuration",
+                style: {top:0,left:0},
+                anchor: 'top',
+                notes: '',
+                toggle: function(e){
+                    var icon = document.querySelector('#chartTitle .icon'),
+                        rect = icon.getBoundingClientRect();
+                    $scope.editor.config.edit = !$scope.editor.config.edit;
+                    $scope.editor.config.style = {
+                        left: (rect.left - 200) + "px",
+                        top: rect.top + "px"
+                    };
+                }
+            },
+            item:{
+                edit: false,
+                title: "Chart Item Properties",
+                style: {top:0,left:0},
+                anchor: 'left',
+                notes: '',
+                toggle: function(el, noToggle){
+                    console.log(el, "el");
+                    if(typeof el !== "undefined"){
+                        var rect = el.getBoundingClientRect(),
+                            iHolder = el.parentNode.parentNode.parentNode.parentNode,
+                            card = iHolder.querySelector('.card'),
+                            cardRect = card.getBoundingClientRect();
+                        
+                        $timeout(function(){
+                            var modal = document.querySelector('#chartItemModal .modal-fade'),
+                                modalRect = modal.getBoundingClientRect(),
+                                topValue = (cardRect.top - 20 + (cardRect.height/2) - (modalRect.height/2)),
+                                leftValue = (cardRect.left + cardRect.width + 20);
+                            
+                            $scope.editor.item.anchor = 'left';
+                            if((leftValue + modalRect.width) > window.innerWidth){
+                                leftValue = (cardRect.left - modalRect.width - 30);
+                                $scope.editor.item.anchor = 'right';
+                            }
+                            
+                            $scope.editor.item.style = {
+                                left: leftValue + "px",
+                                top: topValue + "px"
+                            };
+                            console.log(el, modal, modalRect, cardRect, $scope.editor.item.style, "el");
+                        }, 100);                        
+                    }
+                    $scope.editor.item.edit = noToggle ? $scope.editor.item.edit : !$scope.editor.item.edit;
+                },
+                handleOption: function(item){
+                    var el = document.querySelector('#' + item.id + ' .edit-card i');                    
+                    $scope.editor.item.toggle(el, true);
+                }
+            },
             internal: {
                 enabled: true,
-                editconfig: false,
                 toggleConfigEditor: function(){
                     $scope.editor.internal.editconfig = !$scope.editor.internal.editconfig;
                 },
@@ -40,6 +95,8 @@
                 $scope.editor.internal.enabled = !$scope.editor.internal.enabled;
             }
         };
+        
+       
         
         function generateID(){
             var idString = $scope.editor.idPrefix + (++$scope.editor.internal.incrementor);          
@@ -137,37 +194,35 @@
             }
         };
 	
-	$scope.addOption = function(){
-            
-            console.log("caleed or not?");
-            
+	$scope.addOption = function(){            
             var selected = $scope.editor.internal.selected;
 	    if(selected.id == ''){
                 $scope.application.model.toggle("Please select an existing chartitem to add options to it.");
             }else{
-                var option = $scope.getOptionTemplate(),
-                    mappedChartItem = $scope.getChartTemplate(),
-                    actor = $scope.getActorTemplate();
-                
-                mappedChartItem.id = generateID(selected);
-                mappedChartItem.type = "Activity";
-                mappedChartItem.name = "Chart Name";
-                mappedChartItem.description = "Chart Description";
-                option.id = generateOptionID();
-                option.name = "Option Name";
-                option.charts = mappedChartItem.id;
-                $scope.editor.internal.selected.options.push(option);
-                actor.id = generateActorID();
-                actor.name = "Actor Name";
-                actor.contact = "Contact No";
-                actor.email = "Email";
-                mappedChartItem.actors.push(actor);
-                mappedChartItem.internal.mode = 'display'; 
-                mappedChartItem.internal.style.left = 300 * (mappedChartItem.id.split('-').length-1) + "px";
-                $scope.editor.chartList.push(mappedChartItem);
-                
-                console.log("option added", option, mappedChartItem);
-//                $scope.editor.internal.selected = {id: ''};
+                if($scope.editor.internal.selected.options.length < 5){
+                    var option = $scope.getOptionTemplate(),
+                        mappedChartItem = $scope.getChartTemplate(),
+                        actor = $scope.getActorTemplate();
+
+                    mappedChartItem.id = generateID(selected);
+                    mappedChartItem.type = "Activity";
+                    mappedChartItem.name = "Chart Name";
+                    mappedChartItem.description = "Chart Description";
+                    option.id = generateOptionID();
+                    option.name = "Option Name";
+                    option.charts = mappedChartItem.id;
+                    $scope.editor.internal.selected.options.push(option);
+                    actor.id = generateActorID();
+                    actor.name = "Actor Name";
+                    actor.contact = "Contact No";
+                    actor.email = "Email";
+                    mappedChartItem.actors.push(actor);
+                    mappedChartItem.internal.mode = 'display'; 
+                    mappedChartItem.internal.style.left = 300 * (mappedChartItem.id.split('-').length-1) + "px";
+                    $scope.editor.chartList.push(mappedChartItem);
+                } else {
+                    $scope.application.model.toggle("Only 5 number of Options are allowed.");
+                }                    
             }
 	}
         
@@ -442,6 +497,7 @@
         } else {
             $scope.application.model.toggle("You cannot remove this item if it is of 'Begin' Type or it has child items.");
         }
+        $scope.editor.item.edit = false;
     };
         
     // if the list is empty at the initial moment, load the Begin cart item to it.
