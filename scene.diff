diff --git a/ngapp/app/controller/SceneController.js b/ngapp/app/controller/SceneController.js
index dccad22..faee6e2 100644
--- a/ngapp/app/controller/SceneController.js
+++ b/ngapp/app/controller/SceneController.js
@@ -1,6 +1,5 @@
 function SceneController($scope, $route, $http, $localStorage){
     $scope.selectCard = function(item, pList, editor){
-
         angular.forEach(pList, function(yList, yKey){
             if(angular.isArray(yList)){
                 angular.forEach(yList, function(inst, key){
@@ -49,48 +48,19 @@
         (enabled) ? ct.removeClass('jfc-hide') : ct.addClass('jfc-hide');
     };
     
-    $scope.deleteCard = function(){
-        var scope = this,
-            item = scope.item;
-        if(item.options.length == 0){
-            var index = $scope.editor.chartList.indexOf(item),
-                excludeList = $scope.editor.chartList.splice(index, 1),
-                excludeItem = excludeList[0];
-
-            angular.forEach($scope.editor.chartList, function(yList, yKey){
-                angular.forEach(yList.options, function(option, key){
-                    if(option.charts == excludeItem.id){
-                        $scope.editor.chartList[yKey].options.splice(key, 1);
-                    }
-                    if(option.charts.indexOf(excludeItem.id) !== -1){
-                        var idArr = excludeItem.id.split('-');
-                        idArr.splice(idArr.length-1, 1);
-                        var newId = idArr.join('-');
-                        option.charts = option.charts.replace(new RegExp(excludeItem.id + '-', "gi"), newId);
-                    }
-                });
-                if(yList.id.indexOf(excludeItem.id) !== -1){
-                    var idArr = excludeItem.id.split('-');
-                    idArr.splice(idArr.length-1, 1);
-                    var newId = idArr.join('-');
-                    yList.id = yList.id.replace(new RegExp(excludeItem.id, "gi"), newId);                
-                }
-            });
-            $scope.editor.editList = [];
-        } else {
-            $scope.application.model.toggle("You cannot remove this item until its child items are removed.");
-        }   
-    };
-    
     $scope.manageConfig = function(){
         $scope.editor.internal.toggleConfigEditor();
     };
     
     $scope.addOption = function(){
-        
+        var scope = this;
+        $scope.editor.internal.selected = scope.item;
+        $scope.$parent.addOption();
     };
     
     $scope.addActor = function(){
-        
+        var scope = this;
+        $scope.editor.internal.selected = scope.item;
+        $scope.$parent.addActor();
     };
 }
\ No newline at end of file
diff --git a/ngapp/app/controller/UIChartItemController.js b/ngapp/app/controller/UIChartItemController.js
index 57f2d73..05207c3 100644
--- a/ngapp/app/controller/UIChartItemController.js
+++ b/ngapp/app/controller/UIChartItemController.js
@@ -1,26 +1,15 @@
 function UIChartItemController($scope, $attrs, progressConfig, $timeout) {
     var self = this;
     $scope.mode = 'edit'; // possible modes -> edit, display
-    $scope.typeList = ['Begin', 'Activity', 'Actor', 'End'];
-//    $scope.chartValueField = "id";
+    $scope.typeList = ['Activity', 'Actor', 'End']; //There can be only one Begin Chart Item 'Begin', 
     
     $scope.$watch($scope.item.internal.mode, function(){
         $scope.mode = $scope.item.internal.mode;
     });
     
     $scope.$watch('item.name', function(){
-//        console.log("arguments", arguments);
         $scope.handleChange();
     });
-    
-//    $scope.$watch('subitem.name', function(){
-//        console.log("%c arguments", "color:green;font-size:40px", arguments);
-////        $scope.handleChange();
-//    });
-
-//    $scope.chartChange = function(sItem, oItem){
-//        console.log("%c arguments", "color:green;font-size:40px", $scope.editor, arguments);
-//    };
     
     $scope.doEdit = function(){        
         $scope.mode = $scope.item.internal.mode = 'edit';
@@ -29,54 +18,14 @@
     $scope.doSubmit = function(){
         $scope.mode = $scope.item.internal.mode = 'display';
     };
+
+    $scope.handleChange = function(){};
     
-    $scope.doDelete = function(scope){
-        var item = $scope.item,
-            index = $scope.editor.chartList.indexOf(item),
-            excludeList = $scope.editor.chartList.splice(index, 1),
-            excludeItem = excludeList[0];
-        
-        angular.forEach($scope.editor.chartList, function(yList, yKey){
-            angular.forEach(yList.options, function(option, key){
-                if(option.charts == excludeItem.id){
-                    $scope.editor.chartList[yKey].options.splice(key, 1);
-                }
-                if(option.charts.indexOf(excludeItem.id) !== -1){
-                    var idArr = excludeItem.id.split('-');
-                    idArr.splice(idArr.length-1, 1);
-                    var newId = idArr.join('-');
-                    option.charts = option.charts.replace(new RegExp(excludeItem.id + '-', "gi"), newId);
-                }
-            });
-            if(yList.id.indexOf(excludeItem.id) !== -1){
-                var idArr = excludeItem.id.split('-');
-                idArr.splice(idArr.length-1, 1);
-                var newId = idArr.join('-');
-                yList.id = yList.id.replace(new RegExp(excludeItem.id, "gi"), newId);                
-            }
-        });        
-        $scope.editor.editList = [];        
-//        console.log("%c $scope", "color:red;font-size:22px;", item, index, excludeList);
-    }
-    
-    $scope.handleChange = function(){
-        var levelList = $scope.item.id.split('-');
-//        $scope.item.internal.style.left = 300 * (levelList.length-1) + "px";
-//        $scope.item.internal.style.top = 0 + "px";
-        
-        $timeout(function(){
-            var el = document.getElementById($scope.item.id),
-                height = el.getBoundingClientRect().height;
-                
-//            $scope.item.internal.style.top = (parseInt($scope.item.internal.style.top) - (height/2)) + "px";
-//            console.log("Element ", $scope.item.id, document.getElementById($scope.item.id), height, angular.element(document.getElementById($scope.item.id)));
-        }, 500);        
+    $scope.showAllCustomiseTool = function(e, enabled){
+        var scope = this,
+            ct = angular.element(document.querySelectorAll('.customise-tool')),
+            ctinfo = angular.element(document.querySelectorAll('.customise-tool .card-info'));
+        (enabled) ? ct.removeClass('jfc-hide') : ct.addClass('jfc-hide');
+        (!enabled) ? ctinfo.removeClass('large') : ctinfo.addClass('large');
     };
-    
-//    $scope.$watch('subitem.charts', function(){
-//        if(angular.isDefined($scope.chartChange)){
-//            console.log($scope.subitem, $scope.subitem);
-//            $scope.chartChange($scope.subitem, $scope.subitem);
-//        }  
-//    });
 }
